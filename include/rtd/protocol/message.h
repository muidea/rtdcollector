//
//
//    This software is provided 'as-is', without any express or implied
//    warranty. In no event will the authors be held liable for any
//    damages arising from the use of this software.
//
//    Generated by mupcompiler.
//
//    Author: muidea@gmail.com
//
//
#ifndef __MESSAGE_H_1517557968__
#define __MESSAGE_H_1517557968__
#include "muprotocol/muprotocol.h"
#include "muprotocol/muserialize.h"


namespace RtdPrococol {

class Head : public IMUProtocol
{
public:
    Head();

    virtual ~Head();

    virtual bool encode(void* pBuffPtr, UINT32 uBuffSize, UINT32& uRemainSize) const;

    virtual bool decode(const void* pDataPtr, UINT32 uDataSize, UINT32& uRemainSize);

    virtual UINT32 calcSize() const;

    inline void setVersion(UINT32 const& value)
    {
        _version = value;
    };

    inline UINT32 const& getVersion() const
    {
        return _version;
    };

    inline UINT32& peerVersion()
    {
        return _version;
    };

    inline void setCommandCode(UINT64 const& value)
    {
        _commandCode = value;
    };

    inline UINT64 const& getCommandCode() const
    {
        return _commandCode;
    };

    inline UINT64& peerCommandCode()
    {
        return _commandCode;
    };

    inline void setSerialNo(UINT64 const& value)
    {
        _serialNo = value;
    };

    inline UINT64 const& getSerialNo() const
    {
        return _serialNo;
    };

    inline UINT64& peerSerialNo()
    {
        return _serialNo;
    };

protected:
    bool operator==(Head const& right);

    UINT32 _version;
    UINT64 _commandCode;
    UINT64 _serialNo;
};


}

#endif
