//
//
//    This software is provided 'as-is', without any express or implied
//    warranty. In no event will the authors be held liable for any
//    damages arising from the use of this software.
//
//    Generated by mupcompiler.
//
//    Author: muidea@gmail.com
//
//
#ifndef __RTDCONFIG_H_1517541490__
#define __RTDCONFIG_H_1517541490__
#include "muprotocol/muprotocol.h"
#include "muprotocol/muserialize.h"
#include <string>


namespace RtdPrococol {

class ConfigInfoEvent : public IMUProtocol
{
public:
    ConfigInfoEvent();

    virtual ~ConfigInfoEvent();

    virtual bool encode(void* pBuffPtr, UINT32 uBuffSize, UINT32& uRemainSize) const;

    virtual bool decode(const void* pDataPtr, UINT32 uDataSize, UINT32& uRemainSize);

    virtual UINT32 calcSize() const;

    inline void setConfigInfo(std::string const& value)
    {
        _configInfo = value;
    };

    inline std::string const& getConfigInfo() const
    {
        return _configInfo;
    };

    inline std::string& peerConfigInfo()
    {
        return _configInfo;
    };

protected:
    bool operator==(ConfigInfoEvent const& right);

    std::string _configInfo;
};


}

#endif
